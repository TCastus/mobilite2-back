# Generated by Django 3.1.7 on 2021-03-16 16:23

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('nb_inhabitants', models.PositiveIntegerField(blank=True, null=True)),
                ('night_life_average_grade', models.DecimalField(decimal_places=1, default=0, max_digits=2, null=True)),
                ('cultural_life_average_grade', models.DecimalField(decimal_places=1, default=0, max_digits=2, null=True)),
                ('cost_of_living_average_grade', models.DecimalField(decimal_places=1, default=0, max_digits=2, null=True)),
                ('security_average_grade', models.DecimalField(decimal_places=1, default=0, max_digits=2, null=True)),
                ('rent_average', models.DecimalField(decimal_places=1, default=0, max_digits=2, null=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('continent', models.CharField(choices=[('AS', 'Asie'), ('AF', 'Afrique'), ('AdN', 'Amerique du Nord'), ('AdS', 'Amerique du Sud'), ('EU', 'Europe'), ('OC', 'Oceanie')], max_length=30)),
                ('ECTSConversion', models.FloatField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='DepartementINSA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('BS', 'Biosciences'), ('GCU', 'Génie Civil et Urbanisme'), ('GE', 'Génie Electrique'), ('GEN', 'Génie Energétique et Environnement'), ('GI', 'Génie Industriel'), ('GM', 'Génie Mécanique'), ('IF', 'Informatique'), ('SGM', 'Science et Génie Matériaux'), ('TC', 'Télécommunications, Services et Usages')], max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Departements INSA',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('4A-S1', '4A-S1'), ('4A-S2', '4A-S2'), ('5A-S1', '5A-S1'), ('5A-S2', '5A-S2')], max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('website', models.URLField(blank=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=11, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=11, null=True)),
                ('cwur_rank', models.IntegerField(blank=True, null=True)),
                ('contract_type', models.CharField(choices=[('DD', 'Double Diplôme'), ('E', 'Echange'), ('X', 'Inconnu')], default='X', max_length=100)),
                ('univ_appartment', models.BooleanField(blank=True, null=True)),
                ('courses_difficulty', models.DecimalField(decimal_places=1, default=0, max_digits=2, null=True)),
                ('courses_interest', models.DecimalField(decimal_places=1, default=0, max_digits=2, null=True)),
                ('student_proximity', models.DecimalField(decimal_places=1, default=0, max_digits=2, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mobi.city')),
                ('department_availability', models.ManyToManyField(to='mobi.DepartementINSA')),
            ],
            options={
                'verbose_name_plural': 'Universities',
            },
        ),
        migrations.CreateModel(
            name='FinancialAid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('approx_amount', models.PositiveIntegerField(blank=True)),
                ('period', models.CharField(choices=[('Hebdo', 'Hebdomadaire'), ('Mensuel', 'Mensuel'), ('Trim', 'Trimestriel'), ('Sem', 'Semestriel'), ('An', 'Annuel')], max_length=100)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mobi.country')),
                ('university', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mobi.university')),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('culture', models.PositiveIntegerField()),
                ('night_life', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
                ('cost_of_living', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
                ('security', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
                ('univ_appartment', models.BooleanField()),
                ('rent', models.IntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('visa', models.BooleanField()),
                ('courses_difficulty', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
                ('student_proximity', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
                ('courses_interest', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
                ('certif_languages', models.CharField(choices=[('TOEIC', 'TOEIC'), ('INC', 'INCONNU'), ('AUCUN', 'AUCUN')], default='AUCUN', max_length=100, verbose_name='Certifications requises pour les langues')),
                ('contact', models.BooleanField(verbose_name="Autorisation d'affichage du contact")),
                ('email', models.EmailField(default='exemple@mail.fr', max_length=254, verbose_name='Adresse email')),
                ('department', models.CharField(choices=[('BS', 'Biosciences'), ('GCU', 'Génie Civil et Urbanisme'), ('GE', 'Génie Electrique'), ('GEN', 'Génie Energétique et Environnement'), ('GI', 'Génie Industriel'), ('GM', 'Génie Mécanique'), ('IF', 'Informatique'), ('SGM', 'Science et Génie Matériaux'), ('TC', 'Télécommunications, Services et Usages')], default='TC', max_length=30, verbose_name='Département INSA')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('surname', models.CharField(max_length=100, verbose_name='Prénom')),
                ('diploma_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2050)], verbose_name='Année de départ en échange')),
                ('semester_accepted', models.ManyToManyField(to='mobi.Semester')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mobi.university')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mobi.country'),
        ),
    ]
